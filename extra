https://code.visualstudio.com/
https://nodejs.org/en/
https://github.com/
https://github.com/Aakashdeveloper

Full App with ang 
reactive forms
login/out with JWT
>>>>>Production<<<<
MEAN
Heroku
Docker
Nginx
CI/CD with aws

Testing
Multiling
Json Server(mock api)
Github


MEAN>
Mongo Express Angular Node

>>>>>>>>>>Not<<<<<<
Any thing about how to make api
HTML/CSS/JAVASCRIPT/Jquery
Database


NPM
> Node Package manager

>>>>>> package.json <<<<<<<<<<

> starting point to the application
> meta data
> script
    > start
    > test 
    > build
> packages & version

Json> JavaScript  Object notation
> Way to represent data
> key value;
{
    name:'John',
    class:'Ang'
}

////////////////////////////
Step to generate package.json
////////////////////////////
**NodeJs must be install in system
> navigate to the folder using cmd/terminal
> type npm init
> answer all questions
> type "yes"

>>>>>>>>>>>>>>><<<<<<<<<<<<<
local dependency /packages/node_modules > local to folder
global > installed in the system (generate/test)
       > Admin permission
       > Does not add in package.json 
dev dependency > that use only at time of developing

////////////////////////////
Step to install local dependency
////////////////////////////
> navigate to the folder using cmd/terminal
> npm i package-name

////////////////////////////
Step to install dev dependency
////////////////////////////
> navigate to the folder using cmd/terminal
> npm i package-name --save-dev


////////////////////////////
Step to install global dependency
////////////////////////////
>>Only one time in one system<<<<<
#window
> open cmd as Admin
> npm i -g @angular/cli

#mac/linux
> open the terminal
> sudo npm i -g @angular/cli


////////////////////////////
Step to generate angular app 
////////////////////////////
#window
> open cmd as Admin
> npm i -g @angular/cli

>>>Rest all time when we want new one system<<<<<
> navigate to the folder using cmd
> ng new appname


#mac/linux
> open the terminal
> sudo npm i -g @angular/cli

>>>Rest all time when we want new one system<<<<<
> navigate to the folder using cmd
> ng new appname

///Run////
> go inside the folder 
> npm start
> http://localhost:4200

>>>>>>>>>><<<<<<<<<<<<<<<<<<<
> single page application
> folder walkthrough
> building block
> component in ang 
> Develop home page


Typescript is a super set of JavaScript

//////////////////////////////////
    File walkthrough
/////////////////////////////////
tslint.json ==> make structure of code
tsconfig.spec.json => help to locate test files
tsconfig.json => it will tell where is build code and which version to target
tsconfig.app.json => help to locate application file
ReadMe.md => Details Description of application
package.json > use for dependency,command and small Description, meta data
package-lock.json => use for child dependency
angular.json => first file to run and location all the part of app 
.editorconfig => for editor standards
styles.css > common css of application
polyfills => its help in supporting for all browsers
index.html> first file load in browser 
favicon> simple icon 
env => help to build for prod/dev 
assets => all static files images css videos
app > all developemt happen here
main > this will help to locate main module

>>>>>>>Bootstrap<<<<<<<
angular.json => main.ts => app.module.ts => app.component.ts
>>>>>>>Compile<<<<<<<
browser will run index.html

//////////////////////////////
    Building Block Of Angular
//////////////////////////

Modules => Module is parent of application (ngModule)
Component => HTML,CSS,Logic (component)
Pipe     => Run time data change (pipe,pipe transform)
Services => To connect with external agent dependency injection (Injectable)
Routing  => To manage multiple page (ngModule)
 
main-modules(app.modules.ts)
main-compo  (app.component.ts)

npm start > 

/////
generate Component
/////
ng g c footer

///////////
Binding
////////
One Way Binding

> Data Binding {{}}
> Property Binding []
> Event Binding ()

Two Way binding [()]


///////Structural directive///
ngStyle
*ngClass
*ngFor
*ngIf


///////Pipe///
lowercase
uppercase
titlecase
currency
date
perctange


//////////////
map
filter
indexof

var a = [0,1,2,3]

a.map((data) => { return data*2})
[0,2,4,6]

a.filter((data) => { return data*2})
[1,2,3]

filter only return those value for which output is true


/////////////
custome pipe 
second page
link 2 pages 
make search bar 
two way binding


//////////
make search bar 
loader
services
directive
details

//////////
forms 
bookings


(get) hotels> https://developerfunnel.herokuapp.com/hoteltrip
(get) hotelwrtcity > https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails > https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip> https://developerfunnel.herokuapp.com/hoteltrip/1
https://developerfunnel.herokuapp.com/hotellist/1?roomtype=1
https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500
(get) cityname> https://developerfunnel.herokuapp.com/location
(get)  rooms => https://developerfunnel.herokuapp.com/rooms
(get)  triptype> https://developerfunnel.herokuapp.com/booking
(get)  bookingdetails > https://developerfunnel.herokuapp.com/allBooking
(post) placebooking >  https://developerfunnel.herokuapp.com/placeBook


one module and service can be a part of n number of modules
one component and pipe can be part of only one module

viewchild
pure impure
ngswitch
custome directive
i18n
aws
Docker
nginx
Testing
debug
